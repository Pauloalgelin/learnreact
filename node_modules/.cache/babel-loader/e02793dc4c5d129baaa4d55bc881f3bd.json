{"ast":null,"code":"import _classCallCheck from \"/home/paulo/Desktop/learnReact/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/paulo/Desktop/learnReact/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/paulo/Desktop/learnReact/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/paulo/Desktop/learnReact/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/paulo/Desktop/learnReact/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/paulo/Desktop/learnReact/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/paulo/Desktop/learnReact/src/components/Checklist.js\";\nimport React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport goals from \"./Data\";\n\nvar Checklist =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Checklist, _React$Component);\n\n  function Checklist() {\n    var _this;\n\n    _classCallCheck(this, Checklist);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Checklist).call(this));\n    _this.state = {\n      todos: goals\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Checklist, [{\n    key: \"handleChange\",\n    value: function handleChange(id) {\n      this.setState(function (prevState) {\n        var newGoals = prevState.todos.map(function (item) {\n          if (item.id === id) {\n            item.completed = !item.completed;\n          }\n\n          return item;\n        });\n        return {\n          todos: newGoals\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var todoItemArray = this.state.todos.map(function (item) {\n        return React.createElement(TodoItem, {\n          key: item.id,\n          obj: item,\n          handleChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, todoItemArray);\n    }\n  }]);\n\n  return Checklist;\n}(React.Component);\n\nexport default Checklist;","map":{"version":3,"sources":["/home/paulo/Desktop/learnReact/src/components/Checklist.js"],"names":["React","TodoItem","goals","Checklist","state","todos","handleChange","bind","id","setState","prevState","newGoals","map","item","completed","todoItemArray","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,QAAlB;;IAEMC,S;;;;;AACF,uBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEH;AADE,KAAb;AAGA,UAAKI,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AALU;AAMb;;;;iCAEYC,E,EAAI;AACb,WAAKC,QAAL,CAAc,UAAAC,SAAS,EAAI;AACvB,YAAMC,QAAQ,GAAGD,SAAS,CAACL,KAAV,CAAgBO,GAAhB,CAAoB,UAAAC,IAAI,EAAI;AACzC,cAAGA,IAAI,CAACL,EAAL,KAAYA,EAAf,EAAmB;AACfK,YAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACH;;AACD,iBAAOD,IAAP;AACH,SALgB,CAAjB;AAMA,eAAO;AACHR,UAAAA,KAAK,EAAEM;AADJ,SAAP;AAGH,OAVD;AAWH;;;6BAEQ;AAAA;;AACL,UAAMI,aAAa,GAAG,KAAKX,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAClB,UAAAC,IAAI;AAAA,eAAI,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACL,EAApB;AAAwB,UAAA,GAAG,EAAEK,IAA7B;AAAmC,UAAA,YAAY,EAAE,MAAI,CAACP,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OADc,CAAtB;AAIA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKS,aADL,CADJ;AAKH;;;;EAjCmBf,KAAK,CAACgB,S;;AAoC9B,eAAeb,SAAf","sourcesContent":["import React from \"react\"\nimport TodoItem from \"./TodoItem\"\nimport goals from \"./Data\"\n\nclass Checklist extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: goals\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(id) {\n        this.setState(prevState => {\n            const newGoals = prevState.todos.map(item => {\n                if(item.id === id) {\n                    item.completed = !item.completed\n                }\n                return item\n            })\n            return {\n                todos: newGoals\n            }\n        })\n    }\n\n    render() {\n        const todoItemArray = this.state.todos.map(\n            item => <TodoItem key={item.id} obj={item} handleChange={this.handleChange}/>\n            )\n\n        return (\n            <div>\n                {todoItemArray}\n            </div>\n        )\n    }\n}\n\nexport default Checklist"]},"metadata":{},"sourceType":"module"}